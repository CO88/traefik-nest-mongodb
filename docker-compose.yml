version: "3.3"

services: 
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    labels: 
      traefik.enable: true
      traefik.http.routers.api-rtr.rule: Host(`api.localhost`)
      traefik.http.routers.api-rtr.entrypoints: http
      traefik.http.services.api-svs.loadbalancer.server.port: 3000
    depends_on: 
      - mongodb
    ports:
      - 9229:9229
    networks:
      - internal
    volumes: 
      - app_volume:/usr/src/app

  jaeger:
    image: jaegertracing/all-in-one:1.17
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
      JAEGER_DISABLED: "true"
      # LOG_LEVEL: debug
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    labels:
      traefik.enable: true
      traefik.http.routers.jaeger.rule: Host(`jaeger.localhost`)
      traefik.http.routers.jaeger.entrypoints: http
      traefik.http.routers.jaeger.service: jaeger
      traefik.http.services.jaeger.loadbalancer.server.port: 16686
    networks:
      - internal

  traefik:
    image: traefik:v2.2
    labels: 
      traefik.enable: true
      traefik.http.routers.dashboard.rule: Host(`dashboard.localhost`)
      traefik.http.routers.dashboard.entrypoints: http
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.services.dashboard.loadbalancer.server.port: 8080
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - .traefik/traefik.yaml:/traefik.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default
      - internal

  mongodb:
    image: mongo:4.2
    container_name: mongodb
    environment: 
      - MONGO_INITDB_DATABASE=${DB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MONGO_DATABASE_USERNAME=${DB_USERNAME}
      - MONGO_DATABASE_PASSWORD=${DB_PASSWORD}
    volumes: 
      - ./deploy/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongodbdata:/data/db
    networks: 
      - internal

  # postgres:
  #   container_name: postgres-container
  #   image: postgres:alpine
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - pdata:/var/lib/postgresql/data
  #   networks:
  #     - internal

  # mariadb:
  #   image: "mariadb:10.4.8"
  #   container_name: "typeorm-mariadb"
  #   ports:
  #     - "3307:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "admin"
  #     MYSQL_USER: "cobb"
  #     MYSQL_PASSWORD: 1234
  #     MYSQL_DATABASE: "cobb"
  #   networks: 
  #     - internal

networks:
  internal:

volumes: 
  pdata:
  mongodbdata:
  app_volume:
    driver: local
    driver_opts: 
      type: nfs
      device: ${APP_DIR}
      o: bind